// <auto-generated />
using System;
using EmployeeManagement.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagement.DataAccess.Migrations
{
    [DbContext(typeof(EmployeeManagementDbContext))]
    [Migration("20231219075347_Seedings")]
    partial class Seedings
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmployeeManagement.Core.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Seeding",
                            CreatedOn = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedBy = "Seeding",
                            LastModifiedOn = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "IT"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Seeding",
                            CreatedOn = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedBy = "Seeding",
                            LastModifiedOn = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "HR"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Seeding",
                            CreatedOn = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastModifiedBy = "Seeding",
                            LastModifiedOn = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Marketing"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MonthlyPayment")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 22,
                            BirthDate = new DateTime(2001, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seeding",
                            CreatedOn = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            LastModifiedBy = "Seeding",
                            LastModifiedOn = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MonthlyPayment = 10000m,
                            Name = "Mahmood",
                            Surname = "Garibov"
                        },
                        new
                        {
                            Id = 2,
                            Age = 26,
                            BirthDate = new DateTime(1996, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seeding",
                            CreatedOn = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            LastModifiedBy = "Seeding",
                            LastModifiedOn = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MonthlyPayment = 3000m,
                            Name = "Elchin",
                            Surname = "Garibov"
                        },
                        new
                        {
                            Id = 3,
                            Age = 32,
                            BirthDate = new DateTime(1998, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "Seeding",
                            CreatedOn = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            LastModifiedBy = "Seeding",
                            LastModifiedOn = new DateTime(2023, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MonthlyPayment = 5000m,
                            Name = "Eldar",
                            Surname = "Rasulov"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Core.Entities.Employee", b =>
                {
                    b.HasOne("EmployeeManagement.Core.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EmployeeManagement.Core.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
